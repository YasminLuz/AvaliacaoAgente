@model ProvaRecrutamento.Models.PessoaViewModel

@{
    ViewBag.Title = "CadastrarPessoa1";
}

<h2>CadastrarPessoa1</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div id="modal_cadastro" class="form-horizontal invisivel" role="dialog">
    <h4>PessoaViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.pessoaId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pessoaId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pessoaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cargoId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cargoId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cargoId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cpf, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cpf, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cpf, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.sexo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.sexo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DropDownList("Sexo",
                     new SelectList(Enum.GetValues(typeof(ProvaRecrutamento.Models.Sexo))),
                     "Selecione o sexo",
                     new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dataNasc, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dataNasc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dataNasc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.estadoId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.estadoId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.estadoId, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <div class="modal-footer">
                    <a id="btn_sair" class="btn btn-default" role="button" data-dismiss="modal"><i class="glyphicon glyphicon-remove"></i>Sair</a>
                    <a id="btn_salvar" class="btn btn-primary" role="button"><i class="glyphicon glyphicon-ok"></i>Salvar</a>
                </div>
            </div>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
